#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#define _CRT_secure_no_warning

void multi(int a, int b) {
	int c = 0;
	int d = 0;
	for (c = 1; c < 10; c++) {
		for (d = a; d < b + 1; d++) {
			printf("%2d * %2d = %2d ", d, c, d * c);
		}
		printf("\r\n");
	}

}

int mult(valA1, valB1) {
	int rst1 = 0;
	rst1 = valA1 * valB1;
	return rst1;
}

int main(void) {

	srand(time(NULL));

	int i = 0;

	printf("	랜덤으로 받아온 4개의 숫자\r\n[	");
	for (i = 0; i < 4; i++){
		printf("%d	", rand() % 10);
}
	printf("]");
	printf("\r\n\n");
	

	int j = 0;
	int k = 0;
	int mul;

	 for (j = 1; j < 10; j++) {
		for (k = 1; k < 4; k++) {
			mul = mult(j, k);
			printf("%2d * %2d = %2d	", k, j, mul);
		} printf("\r\n");
	}
		printf("\r\n\n");

		for (j = 1; j < 10; j++) {
			for (k = 4; k < 7; k++) {
				mul = mult(j, k);
				printf("%2d * %2d = %2d	", k, j, mul);
			} printf("\r\n");
		}

		printf("\r\n\n");

		for (j = 1; j < 10; j++) {
			for (k = 7; k < 10; k++) {
				mul = mult(j, k);
				printf("%2d * %2d = %2d	", k, j, mul);
			} printf("\r\n");
		}

		printf("\r\n\n\n");

	
	int A = 0;
	int B = 0;
	printf("시작될 단을 입력하시오: ");
	scanf_s("%d", &A);
	printf("끝낼 단을 입력하시오: ");
	scanf_s("%d", &B);

	multi(A, B);
	

	
	int l = 0;
	int m = 0;
	int ar1[10] = {1, 7, 4, 10, 16, 27, 19, 53, 28, 14};
	int ar2[10];
	int ar1length = sizeof(ar1) / sizeof(int);
	int ar2length = sizeof(ar2) / sizeof(int);
	
	int max1 = ar1[0];
	for (int l = 0; l < ar1length; l++)
		if (max1 < ar1[l]) {
			max1 = ar1[l];
		}

	printf("배열에 들어가 있는 값 : ");
	for (l = 0; l < 10; l++) {
		printf("%d ", ar1[l]);
	}
	printf("\r\n");
	printf("최대값 : %d\r\n\n\n\n", max1);



	printf("배열에 들어가 있는 수는 순서대로\r\n");
	for (m = 0; m < ar2length; m++) {
		ar2[m] = rand() % 500;
		printf("%d ", ar2[m]);
	}
	printf("이다. \r\n");
	
	int max2 = ar2[0];
	for( int m = 0 ; m < ar2length ; m++ )
		if (max2 < ar2[m]) {
			max2 = ar2[m];
		}
	printf("최대값 : %d\r\n\n\n\n", max2);
	

	int storage = 450;
	int* ptr1;

	ptr1 = &storage;

	printf("storage의 값 : %d, storage의 메모리주소 : %d\r\n\n\n", *ptr1, &storage);

	int n = 0;
	int ar3[7] = { 1, 3, 2, 4, 5, 7, 6 };

	int* ptr2;
	ptr2 = &ar3[0];

	for (n = 0; n < 7; n++) {
		printf("%d ", *ptr2+n);
	}



	return 0;
}